
DIO_DRIVER.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000006be  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000600  00000000  00000000  00000714  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000405  00000000  00000000  00000d14  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 5d 03 	jmp	0x6ba	; 0x6ba <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:

#include "STD_TYPES.h"
#include "MATH.h"
#include "DIO_INTERFACE.h"
int main()
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
	DIO_SetPortDirection(PORT2,PORT_OUTPUT);
  74:	82 e0       	ldi	r24, 0x02	; 2
  76:	6f ef       	ldi	r22, 0xFF	; 255
  78:	0e 94 db 02 	call	0x5b6	; 0x5b6 <DIO_SetPortDirection>
	DIO_SetPortValue (PORT2, 0xff);
  7c:	82 e0       	ldi	r24, 0x02	; 2
  7e:	6f ef       	ldi	r22, 0xFF	; 255
  80:	0e 94 1c 03 	call	0x638	; 0x638 <DIO_SetPortValue>

return 0;
  84:	80 e0       	ldi	r24, 0x00	; 0
  86:	90 e0       	ldi	r25, 0x00	; 0
}
  88:	cf 91       	pop	r28
  8a:	df 91       	pop	r29
  8c:	08 95       	ret

0000008e <DIO_SetPinDirection_u8>:
#include"STD_TYPES.h"
#include"MATH.h"
#include"DIO_PRIVATE.h"
#include"DIO_INTERFACE.h"
void DIO_SetPinDirection_u8(u8 u8PortId_Copy,u8 u8PinId_copy,u8 u8Value_copy)
{
  8e:	df 93       	push	r29
  90:	cf 93       	push	r28
  92:	cd b7       	in	r28, 0x3d	; 61
  94:	de b7       	in	r29, 0x3e	; 62
  96:	27 97       	sbiw	r28, 0x07	; 7
  98:	0f b6       	in	r0, 0x3f	; 63
  9a:	f8 94       	cli
  9c:	de bf       	out	0x3e, r29	; 62
  9e:	0f be       	out	0x3f, r0	; 63
  a0:	cd bf       	out	0x3d, r28	; 61
  a2:	89 83       	std	Y+1, r24	; 0x01
  a4:	6a 83       	std	Y+2, r22	; 0x02
  a6:	4b 83       	std	Y+3, r20	; 0x03


if(u8PortId_Copy<4 && u8PinId_copy<=7)
  a8:	89 81       	ldd	r24, Y+1	; 0x01
  aa:	84 30       	cpi	r24, 0x04	; 4
  ac:	08 f0       	brcs	.+2      	; 0xb0 <DIO_SetPinDirection_u8+0x22>
  ae:	ee c0       	rjmp	.+476    	; 0x28c <DIO_SetPinDirection_u8+0x1fe>
  b0:	8a 81       	ldd	r24, Y+2	; 0x02
  b2:	88 30       	cpi	r24, 0x08	; 8
  b4:	08 f0       	brcs	.+2      	; 0xb8 <DIO_SetPinDirection_u8+0x2a>
  b6:	ea c0       	rjmp	.+468    	; 0x28c <DIO_SetPinDirection_u8+0x1fe>
{
	if(u8Value_copy==INPUT)
  b8:	8b 81       	ldd	r24, Y+3	; 0x03
  ba:	88 23       	and	r24, r24
  bc:	09 f0       	breq	.+2      	; 0xc0 <DIO_SetPinDirection_u8+0x32>
  be:	74 c0       	rjmp	.+232    	; 0x1a8 <DIO_SetPinDirection_u8+0x11a>
	{
switch(u8PortId_Copy)
  c0:	89 81       	ldd	r24, Y+1	; 0x01
  c2:	28 2f       	mov	r18, r24
  c4:	30 e0       	ldi	r19, 0x00	; 0
  c6:	3f 83       	std	Y+7, r19	; 0x07
  c8:	2e 83       	std	Y+6, r18	; 0x06
  ca:	8e 81       	ldd	r24, Y+6	; 0x06
  cc:	9f 81       	ldd	r25, Y+7	; 0x07
  ce:	81 30       	cpi	r24, 0x01	; 1
  d0:	91 05       	cpc	r25, r1
  d2:	59 f1       	breq	.+86     	; 0x12a <DIO_SetPinDirection_u8+0x9c>
  d4:	2e 81       	ldd	r18, Y+6	; 0x06
  d6:	3f 81       	ldd	r19, Y+7	; 0x07
  d8:	22 30       	cpi	r18, 0x02	; 2
  da:	31 05       	cpc	r19, r1
  dc:	2c f4       	brge	.+10     	; 0xe8 <DIO_SetPinDirection_u8+0x5a>
  de:	8e 81       	ldd	r24, Y+6	; 0x06
  e0:	9f 81       	ldd	r25, Y+7	; 0x07
  e2:	00 97       	sbiw	r24, 0x00	; 0
  e4:	69 f0       	breq	.+26     	; 0x100 <DIO_SetPinDirection_u8+0x72>
  e6:	d2 c0       	rjmp	.+420    	; 0x28c <DIO_SetPinDirection_u8+0x1fe>
  e8:	2e 81       	ldd	r18, Y+6	; 0x06
  ea:	3f 81       	ldd	r19, Y+7	; 0x07
  ec:	22 30       	cpi	r18, 0x02	; 2
  ee:	31 05       	cpc	r19, r1
  f0:	89 f1       	breq	.+98     	; 0x154 <DIO_SetPinDirection_u8+0xc6>
  f2:	8e 81       	ldd	r24, Y+6	; 0x06
  f4:	9f 81       	ldd	r25, Y+7	; 0x07
  f6:	83 30       	cpi	r24, 0x03	; 3
  f8:	91 05       	cpc	r25, r1
  fa:	09 f4       	brne	.+2      	; 0xfe <DIO_SetPinDirection_u8+0x70>
  fc:	40 c0       	rjmp	.+128    	; 0x17e <DIO_SetPinDirection_u8+0xf0>
  fe:	c6 c0       	rjmp	.+396    	; 0x28c <DIO_SetPinDirection_u8+0x1fe>
{
case PORT0 :CLEAR_BIT( DDRA_REG,u8PinId_copy); break;
 100:	aa e3       	ldi	r26, 0x3A	; 58
 102:	b0 e0       	ldi	r27, 0x00	; 0
 104:	ea e3       	ldi	r30, 0x3A	; 58
 106:	f0 e0       	ldi	r31, 0x00	; 0
 108:	80 81       	ld	r24, Z
 10a:	48 2f       	mov	r20, r24
 10c:	8a 81       	ldd	r24, Y+2	; 0x02
 10e:	28 2f       	mov	r18, r24
 110:	30 e0       	ldi	r19, 0x00	; 0
 112:	81 e0       	ldi	r24, 0x01	; 1
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	02 2e       	mov	r0, r18
 118:	02 c0       	rjmp	.+4      	; 0x11e <DIO_SetPinDirection_u8+0x90>
 11a:	88 0f       	add	r24, r24
 11c:	99 1f       	adc	r25, r25
 11e:	0a 94       	dec	r0
 120:	e2 f7       	brpl	.-8      	; 0x11a <DIO_SetPinDirection_u8+0x8c>
 122:	80 95       	com	r24
 124:	84 23       	and	r24, r20
 126:	8c 93       	st	X, r24
 128:	b1 c0       	rjmp	.+354    	; 0x28c <DIO_SetPinDirection_u8+0x1fe>
case PORT1 :CLEAR_BIT( DDRB_REG,u8PinId_copy); break;
 12a:	a7 e3       	ldi	r26, 0x37	; 55
 12c:	b0 e0       	ldi	r27, 0x00	; 0
 12e:	e7 e3       	ldi	r30, 0x37	; 55
 130:	f0 e0       	ldi	r31, 0x00	; 0
 132:	80 81       	ld	r24, Z
 134:	48 2f       	mov	r20, r24
 136:	8a 81       	ldd	r24, Y+2	; 0x02
 138:	28 2f       	mov	r18, r24
 13a:	30 e0       	ldi	r19, 0x00	; 0
 13c:	81 e0       	ldi	r24, 0x01	; 1
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	02 2e       	mov	r0, r18
 142:	02 c0       	rjmp	.+4      	; 0x148 <DIO_SetPinDirection_u8+0xba>
 144:	88 0f       	add	r24, r24
 146:	99 1f       	adc	r25, r25
 148:	0a 94       	dec	r0
 14a:	e2 f7       	brpl	.-8      	; 0x144 <DIO_SetPinDirection_u8+0xb6>
 14c:	80 95       	com	r24
 14e:	84 23       	and	r24, r20
 150:	8c 93       	st	X, r24
 152:	9c c0       	rjmp	.+312    	; 0x28c <DIO_SetPinDirection_u8+0x1fe>
case PORT2 :CLEAR_BIT( DDRC_REG,u8PinId_copy); break;
 154:	a4 e3       	ldi	r26, 0x34	; 52
 156:	b0 e0       	ldi	r27, 0x00	; 0
 158:	e4 e3       	ldi	r30, 0x34	; 52
 15a:	f0 e0       	ldi	r31, 0x00	; 0
 15c:	80 81       	ld	r24, Z
 15e:	48 2f       	mov	r20, r24
 160:	8a 81       	ldd	r24, Y+2	; 0x02
 162:	28 2f       	mov	r18, r24
 164:	30 e0       	ldi	r19, 0x00	; 0
 166:	81 e0       	ldi	r24, 0x01	; 1
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	02 2e       	mov	r0, r18
 16c:	02 c0       	rjmp	.+4      	; 0x172 <DIO_SetPinDirection_u8+0xe4>
 16e:	88 0f       	add	r24, r24
 170:	99 1f       	adc	r25, r25
 172:	0a 94       	dec	r0
 174:	e2 f7       	brpl	.-8      	; 0x16e <DIO_SetPinDirection_u8+0xe0>
 176:	80 95       	com	r24
 178:	84 23       	and	r24, r20
 17a:	8c 93       	st	X, r24
 17c:	87 c0       	rjmp	.+270    	; 0x28c <DIO_SetPinDirection_u8+0x1fe>
case PORT3 :CLEAR_BIT( DDRD_REG,u8PinId_copy); break;
 17e:	a1 e3       	ldi	r26, 0x31	; 49
 180:	b0 e0       	ldi	r27, 0x00	; 0
 182:	e1 e3       	ldi	r30, 0x31	; 49
 184:	f0 e0       	ldi	r31, 0x00	; 0
 186:	80 81       	ld	r24, Z
 188:	48 2f       	mov	r20, r24
 18a:	8a 81       	ldd	r24, Y+2	; 0x02
 18c:	28 2f       	mov	r18, r24
 18e:	30 e0       	ldi	r19, 0x00	; 0
 190:	81 e0       	ldi	r24, 0x01	; 1
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	02 2e       	mov	r0, r18
 196:	02 c0       	rjmp	.+4      	; 0x19c <DIO_SetPinDirection_u8+0x10e>
 198:	88 0f       	add	r24, r24
 19a:	99 1f       	adc	r25, r25
 19c:	0a 94       	dec	r0
 19e:	e2 f7       	brpl	.-8      	; 0x198 <DIO_SetPinDirection_u8+0x10a>
 1a0:	80 95       	com	r24
 1a2:	84 23       	and	r24, r20
 1a4:	8c 93       	st	X, r24
 1a6:	72 c0       	rjmp	.+228    	; 0x28c <DIO_SetPinDirection_u8+0x1fe>
}
	}
	else if (u8Value_copy==OUTPUT)
 1a8:	8b 81       	ldd	r24, Y+3	; 0x03
 1aa:	81 30       	cpi	r24, 0x01	; 1
 1ac:	09 f0       	breq	.+2      	; 0x1b0 <DIO_SetPinDirection_u8+0x122>
 1ae:	6e c0       	rjmp	.+220    	; 0x28c <DIO_SetPinDirection_u8+0x1fe>
	{
		switch(u8PortId_Copy)
 1b0:	89 81       	ldd	r24, Y+1	; 0x01
 1b2:	28 2f       	mov	r18, r24
 1b4:	30 e0       	ldi	r19, 0x00	; 0
 1b6:	3d 83       	std	Y+5, r19	; 0x05
 1b8:	2c 83       	std	Y+4, r18	; 0x04
 1ba:	8c 81       	ldd	r24, Y+4	; 0x04
 1bc:	9d 81       	ldd	r25, Y+5	; 0x05
 1be:	81 30       	cpi	r24, 0x01	; 1
 1c0:	91 05       	cpc	r25, r1
 1c2:	49 f1       	breq	.+82     	; 0x216 <DIO_SetPinDirection_u8+0x188>
 1c4:	2c 81       	ldd	r18, Y+4	; 0x04
 1c6:	3d 81       	ldd	r19, Y+5	; 0x05
 1c8:	22 30       	cpi	r18, 0x02	; 2
 1ca:	31 05       	cpc	r19, r1
 1cc:	2c f4       	brge	.+10     	; 0x1d8 <DIO_SetPinDirection_u8+0x14a>
 1ce:	8c 81       	ldd	r24, Y+4	; 0x04
 1d0:	9d 81       	ldd	r25, Y+5	; 0x05
 1d2:	00 97       	sbiw	r24, 0x00	; 0
 1d4:	61 f0       	breq	.+24     	; 0x1ee <DIO_SetPinDirection_u8+0x160>
 1d6:	5a c0       	rjmp	.+180    	; 0x28c <DIO_SetPinDirection_u8+0x1fe>
 1d8:	2c 81       	ldd	r18, Y+4	; 0x04
 1da:	3d 81       	ldd	r19, Y+5	; 0x05
 1dc:	22 30       	cpi	r18, 0x02	; 2
 1de:	31 05       	cpc	r19, r1
 1e0:	71 f1       	breq	.+92     	; 0x23e <DIO_SetPinDirection_u8+0x1b0>
 1e2:	8c 81       	ldd	r24, Y+4	; 0x04
 1e4:	9d 81       	ldd	r25, Y+5	; 0x05
 1e6:	83 30       	cpi	r24, 0x03	; 3
 1e8:	91 05       	cpc	r25, r1
 1ea:	e9 f1       	breq	.+122    	; 0x266 <DIO_SetPinDirection_u8+0x1d8>
 1ec:	4f c0       	rjmp	.+158    	; 0x28c <DIO_SetPinDirection_u8+0x1fe>
		{
		case PORT0 :SET_BIT( DDRA_REG,u8PinId_copy); break;
 1ee:	aa e3       	ldi	r26, 0x3A	; 58
 1f0:	b0 e0       	ldi	r27, 0x00	; 0
 1f2:	ea e3       	ldi	r30, 0x3A	; 58
 1f4:	f0 e0       	ldi	r31, 0x00	; 0
 1f6:	80 81       	ld	r24, Z
 1f8:	48 2f       	mov	r20, r24
 1fa:	8a 81       	ldd	r24, Y+2	; 0x02
 1fc:	28 2f       	mov	r18, r24
 1fe:	30 e0       	ldi	r19, 0x00	; 0
 200:	81 e0       	ldi	r24, 0x01	; 1
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	02 2e       	mov	r0, r18
 206:	02 c0       	rjmp	.+4      	; 0x20c <DIO_SetPinDirection_u8+0x17e>
 208:	88 0f       	add	r24, r24
 20a:	99 1f       	adc	r25, r25
 20c:	0a 94       	dec	r0
 20e:	e2 f7       	brpl	.-8      	; 0x208 <DIO_SetPinDirection_u8+0x17a>
 210:	84 2b       	or	r24, r20
 212:	8c 93       	st	X, r24
 214:	3b c0       	rjmp	.+118    	; 0x28c <DIO_SetPinDirection_u8+0x1fe>
		case PORT1 :SET_BIT( DDRB_REG,u8PinId_copy); break;
 216:	a7 e3       	ldi	r26, 0x37	; 55
 218:	b0 e0       	ldi	r27, 0x00	; 0
 21a:	e7 e3       	ldi	r30, 0x37	; 55
 21c:	f0 e0       	ldi	r31, 0x00	; 0
 21e:	80 81       	ld	r24, Z
 220:	48 2f       	mov	r20, r24
 222:	8a 81       	ldd	r24, Y+2	; 0x02
 224:	28 2f       	mov	r18, r24
 226:	30 e0       	ldi	r19, 0x00	; 0
 228:	81 e0       	ldi	r24, 0x01	; 1
 22a:	90 e0       	ldi	r25, 0x00	; 0
 22c:	02 2e       	mov	r0, r18
 22e:	02 c0       	rjmp	.+4      	; 0x234 <DIO_SetPinDirection_u8+0x1a6>
 230:	88 0f       	add	r24, r24
 232:	99 1f       	adc	r25, r25
 234:	0a 94       	dec	r0
 236:	e2 f7       	brpl	.-8      	; 0x230 <DIO_SetPinDirection_u8+0x1a2>
 238:	84 2b       	or	r24, r20
 23a:	8c 93       	st	X, r24
 23c:	27 c0       	rjmp	.+78     	; 0x28c <DIO_SetPinDirection_u8+0x1fe>
		case PORT2 :SET_BIT( DDRC_REG,u8PinId_copy); break;
 23e:	a4 e3       	ldi	r26, 0x34	; 52
 240:	b0 e0       	ldi	r27, 0x00	; 0
 242:	e4 e3       	ldi	r30, 0x34	; 52
 244:	f0 e0       	ldi	r31, 0x00	; 0
 246:	80 81       	ld	r24, Z
 248:	48 2f       	mov	r20, r24
 24a:	8a 81       	ldd	r24, Y+2	; 0x02
 24c:	28 2f       	mov	r18, r24
 24e:	30 e0       	ldi	r19, 0x00	; 0
 250:	81 e0       	ldi	r24, 0x01	; 1
 252:	90 e0       	ldi	r25, 0x00	; 0
 254:	02 2e       	mov	r0, r18
 256:	02 c0       	rjmp	.+4      	; 0x25c <DIO_SetPinDirection_u8+0x1ce>
 258:	88 0f       	add	r24, r24
 25a:	99 1f       	adc	r25, r25
 25c:	0a 94       	dec	r0
 25e:	e2 f7       	brpl	.-8      	; 0x258 <DIO_SetPinDirection_u8+0x1ca>
 260:	84 2b       	or	r24, r20
 262:	8c 93       	st	X, r24
 264:	13 c0       	rjmp	.+38     	; 0x28c <DIO_SetPinDirection_u8+0x1fe>
		case PORT3 :SET_BIT( DDRD_REG,u8PinId_copy); break;
 266:	a1 e3       	ldi	r26, 0x31	; 49
 268:	b0 e0       	ldi	r27, 0x00	; 0
 26a:	e1 e3       	ldi	r30, 0x31	; 49
 26c:	f0 e0       	ldi	r31, 0x00	; 0
 26e:	80 81       	ld	r24, Z
 270:	48 2f       	mov	r20, r24
 272:	8a 81       	ldd	r24, Y+2	; 0x02
 274:	28 2f       	mov	r18, r24
 276:	30 e0       	ldi	r19, 0x00	; 0
 278:	81 e0       	ldi	r24, 0x01	; 1
 27a:	90 e0       	ldi	r25, 0x00	; 0
 27c:	02 2e       	mov	r0, r18
 27e:	02 c0       	rjmp	.+4      	; 0x284 <DIO_SetPinDirection_u8+0x1f6>
 280:	88 0f       	add	r24, r24
 282:	99 1f       	adc	r25, r25
 284:	0a 94       	dec	r0
 286:	e2 f7       	brpl	.-8      	; 0x280 <DIO_SetPinDirection_u8+0x1f2>
 288:	84 2b       	or	r24, r20
 28a:	8c 93       	st	X, r24

}
else
{/*DO NOTHING*/}

}
 28c:	27 96       	adiw	r28, 0x07	; 7
 28e:	0f b6       	in	r0, 0x3f	; 63
 290:	f8 94       	cli
 292:	de bf       	out	0x3e, r29	; 62
 294:	0f be       	out	0x3f, r0	; 63
 296:	cd bf       	out	0x3d, r28	; 61
 298:	cf 91       	pop	r28
 29a:	df 91       	pop	r29
 29c:	08 95       	ret

0000029e <DIO_SetPinValue_u8>:




void DIO_SetPinValue_u8(u8 u8PortId_Copy,u8 u8PinId_copy,u8 u8Value_copy)
{
 29e:	df 93       	push	r29
 2a0:	cf 93       	push	r28
 2a2:	cd b7       	in	r28, 0x3d	; 61
 2a4:	de b7       	in	r29, 0x3e	; 62
 2a6:	27 97       	sbiw	r28, 0x07	; 7
 2a8:	0f b6       	in	r0, 0x3f	; 63
 2aa:	f8 94       	cli
 2ac:	de bf       	out	0x3e, r29	; 62
 2ae:	0f be       	out	0x3f, r0	; 63
 2b0:	cd bf       	out	0x3d, r28	; 61
 2b2:	89 83       	std	Y+1, r24	; 0x01
 2b4:	6a 83       	std	Y+2, r22	; 0x02
 2b6:	4b 83       	std	Y+3, r20	; 0x03


if(u8PortId_Copy<4 && u8PinId_copy<=7)
 2b8:	89 81       	ldd	r24, Y+1	; 0x01
 2ba:	84 30       	cpi	r24, 0x04	; 4
 2bc:	08 f0       	brcs	.+2      	; 0x2c0 <DIO_SetPinValue_u8+0x22>
 2be:	ee c0       	rjmp	.+476    	; 0x49c <DIO_SetPinValue_u8+0x1fe>
 2c0:	8a 81       	ldd	r24, Y+2	; 0x02
 2c2:	88 30       	cpi	r24, 0x08	; 8
 2c4:	08 f0       	brcs	.+2      	; 0x2c8 <DIO_SetPinValue_u8+0x2a>
 2c6:	ea c0       	rjmp	.+468    	; 0x49c <DIO_SetPinValue_u8+0x1fe>
{
	if(u8Value_copy==LOW)
 2c8:	8b 81       	ldd	r24, Y+3	; 0x03
 2ca:	88 23       	and	r24, r24
 2cc:	09 f0       	breq	.+2      	; 0x2d0 <DIO_SetPinValue_u8+0x32>
 2ce:	74 c0       	rjmp	.+232    	; 0x3b8 <DIO_SetPinValue_u8+0x11a>
	{
switch(u8PortId_Copy)
 2d0:	89 81       	ldd	r24, Y+1	; 0x01
 2d2:	28 2f       	mov	r18, r24
 2d4:	30 e0       	ldi	r19, 0x00	; 0
 2d6:	3f 83       	std	Y+7, r19	; 0x07
 2d8:	2e 83       	std	Y+6, r18	; 0x06
 2da:	8e 81       	ldd	r24, Y+6	; 0x06
 2dc:	9f 81       	ldd	r25, Y+7	; 0x07
 2de:	81 30       	cpi	r24, 0x01	; 1
 2e0:	91 05       	cpc	r25, r1
 2e2:	59 f1       	breq	.+86     	; 0x33a <DIO_SetPinValue_u8+0x9c>
 2e4:	2e 81       	ldd	r18, Y+6	; 0x06
 2e6:	3f 81       	ldd	r19, Y+7	; 0x07
 2e8:	22 30       	cpi	r18, 0x02	; 2
 2ea:	31 05       	cpc	r19, r1
 2ec:	2c f4       	brge	.+10     	; 0x2f8 <DIO_SetPinValue_u8+0x5a>
 2ee:	8e 81       	ldd	r24, Y+6	; 0x06
 2f0:	9f 81       	ldd	r25, Y+7	; 0x07
 2f2:	00 97       	sbiw	r24, 0x00	; 0
 2f4:	69 f0       	breq	.+26     	; 0x310 <DIO_SetPinValue_u8+0x72>
 2f6:	d2 c0       	rjmp	.+420    	; 0x49c <DIO_SetPinValue_u8+0x1fe>
 2f8:	2e 81       	ldd	r18, Y+6	; 0x06
 2fa:	3f 81       	ldd	r19, Y+7	; 0x07
 2fc:	22 30       	cpi	r18, 0x02	; 2
 2fe:	31 05       	cpc	r19, r1
 300:	89 f1       	breq	.+98     	; 0x364 <DIO_SetPinValue_u8+0xc6>
 302:	8e 81       	ldd	r24, Y+6	; 0x06
 304:	9f 81       	ldd	r25, Y+7	; 0x07
 306:	83 30       	cpi	r24, 0x03	; 3
 308:	91 05       	cpc	r25, r1
 30a:	09 f4       	brne	.+2      	; 0x30e <DIO_SetPinValue_u8+0x70>
 30c:	40 c0       	rjmp	.+128    	; 0x38e <DIO_SetPinValue_u8+0xf0>
 30e:	c6 c0       	rjmp	.+396    	; 0x49c <DIO_SetPinValue_u8+0x1fe>
{
case PORT0 :CLEAR_BIT( PORTA_REG,u8PinId_copy); break;
 310:	ab e3       	ldi	r26, 0x3B	; 59
 312:	b0 e0       	ldi	r27, 0x00	; 0
 314:	eb e3       	ldi	r30, 0x3B	; 59
 316:	f0 e0       	ldi	r31, 0x00	; 0
 318:	80 81       	ld	r24, Z
 31a:	48 2f       	mov	r20, r24
 31c:	8a 81       	ldd	r24, Y+2	; 0x02
 31e:	28 2f       	mov	r18, r24
 320:	30 e0       	ldi	r19, 0x00	; 0
 322:	81 e0       	ldi	r24, 0x01	; 1
 324:	90 e0       	ldi	r25, 0x00	; 0
 326:	02 2e       	mov	r0, r18
 328:	02 c0       	rjmp	.+4      	; 0x32e <DIO_SetPinValue_u8+0x90>
 32a:	88 0f       	add	r24, r24
 32c:	99 1f       	adc	r25, r25
 32e:	0a 94       	dec	r0
 330:	e2 f7       	brpl	.-8      	; 0x32a <DIO_SetPinValue_u8+0x8c>
 332:	80 95       	com	r24
 334:	84 23       	and	r24, r20
 336:	8c 93       	st	X, r24
 338:	b1 c0       	rjmp	.+354    	; 0x49c <DIO_SetPinValue_u8+0x1fe>
case PORT1 :CLEAR_BIT( PORTB_REG,u8PinId_copy); break;
 33a:	a8 e3       	ldi	r26, 0x38	; 56
 33c:	b0 e0       	ldi	r27, 0x00	; 0
 33e:	e8 e3       	ldi	r30, 0x38	; 56
 340:	f0 e0       	ldi	r31, 0x00	; 0
 342:	80 81       	ld	r24, Z
 344:	48 2f       	mov	r20, r24
 346:	8a 81       	ldd	r24, Y+2	; 0x02
 348:	28 2f       	mov	r18, r24
 34a:	30 e0       	ldi	r19, 0x00	; 0
 34c:	81 e0       	ldi	r24, 0x01	; 1
 34e:	90 e0       	ldi	r25, 0x00	; 0
 350:	02 2e       	mov	r0, r18
 352:	02 c0       	rjmp	.+4      	; 0x358 <DIO_SetPinValue_u8+0xba>
 354:	88 0f       	add	r24, r24
 356:	99 1f       	adc	r25, r25
 358:	0a 94       	dec	r0
 35a:	e2 f7       	brpl	.-8      	; 0x354 <DIO_SetPinValue_u8+0xb6>
 35c:	80 95       	com	r24
 35e:	84 23       	and	r24, r20
 360:	8c 93       	st	X, r24
 362:	9c c0       	rjmp	.+312    	; 0x49c <DIO_SetPinValue_u8+0x1fe>
case PORT2 :CLEAR_BIT( PORTC_REG,u8PinId_copy); break;
 364:	a5 e3       	ldi	r26, 0x35	; 53
 366:	b0 e0       	ldi	r27, 0x00	; 0
 368:	e5 e3       	ldi	r30, 0x35	; 53
 36a:	f0 e0       	ldi	r31, 0x00	; 0
 36c:	80 81       	ld	r24, Z
 36e:	48 2f       	mov	r20, r24
 370:	8a 81       	ldd	r24, Y+2	; 0x02
 372:	28 2f       	mov	r18, r24
 374:	30 e0       	ldi	r19, 0x00	; 0
 376:	81 e0       	ldi	r24, 0x01	; 1
 378:	90 e0       	ldi	r25, 0x00	; 0
 37a:	02 2e       	mov	r0, r18
 37c:	02 c0       	rjmp	.+4      	; 0x382 <DIO_SetPinValue_u8+0xe4>
 37e:	88 0f       	add	r24, r24
 380:	99 1f       	adc	r25, r25
 382:	0a 94       	dec	r0
 384:	e2 f7       	brpl	.-8      	; 0x37e <DIO_SetPinValue_u8+0xe0>
 386:	80 95       	com	r24
 388:	84 23       	and	r24, r20
 38a:	8c 93       	st	X, r24
 38c:	87 c0       	rjmp	.+270    	; 0x49c <DIO_SetPinValue_u8+0x1fe>
case PORT3 :CLEAR_BIT( PORTD_REG,u8PinId_copy); break;
 38e:	a2 e3       	ldi	r26, 0x32	; 50
 390:	b0 e0       	ldi	r27, 0x00	; 0
 392:	e2 e3       	ldi	r30, 0x32	; 50
 394:	f0 e0       	ldi	r31, 0x00	; 0
 396:	80 81       	ld	r24, Z
 398:	48 2f       	mov	r20, r24
 39a:	8a 81       	ldd	r24, Y+2	; 0x02
 39c:	28 2f       	mov	r18, r24
 39e:	30 e0       	ldi	r19, 0x00	; 0
 3a0:	81 e0       	ldi	r24, 0x01	; 1
 3a2:	90 e0       	ldi	r25, 0x00	; 0
 3a4:	02 2e       	mov	r0, r18
 3a6:	02 c0       	rjmp	.+4      	; 0x3ac <DIO_SetPinValue_u8+0x10e>
 3a8:	88 0f       	add	r24, r24
 3aa:	99 1f       	adc	r25, r25
 3ac:	0a 94       	dec	r0
 3ae:	e2 f7       	brpl	.-8      	; 0x3a8 <DIO_SetPinValue_u8+0x10a>
 3b0:	80 95       	com	r24
 3b2:	84 23       	and	r24, r20
 3b4:	8c 93       	st	X, r24
 3b6:	72 c0       	rjmp	.+228    	; 0x49c <DIO_SetPinValue_u8+0x1fe>
}
	}
	else if (u8Value_copy==HIGH)
 3b8:	8b 81       	ldd	r24, Y+3	; 0x03
 3ba:	81 30       	cpi	r24, 0x01	; 1
 3bc:	09 f0       	breq	.+2      	; 0x3c0 <DIO_SetPinValue_u8+0x122>
 3be:	6e c0       	rjmp	.+220    	; 0x49c <DIO_SetPinValue_u8+0x1fe>
	{
		switch(u8PortId_Copy)
 3c0:	89 81       	ldd	r24, Y+1	; 0x01
 3c2:	28 2f       	mov	r18, r24
 3c4:	30 e0       	ldi	r19, 0x00	; 0
 3c6:	3d 83       	std	Y+5, r19	; 0x05
 3c8:	2c 83       	std	Y+4, r18	; 0x04
 3ca:	8c 81       	ldd	r24, Y+4	; 0x04
 3cc:	9d 81       	ldd	r25, Y+5	; 0x05
 3ce:	81 30       	cpi	r24, 0x01	; 1
 3d0:	91 05       	cpc	r25, r1
 3d2:	49 f1       	breq	.+82     	; 0x426 <DIO_SetPinValue_u8+0x188>
 3d4:	2c 81       	ldd	r18, Y+4	; 0x04
 3d6:	3d 81       	ldd	r19, Y+5	; 0x05
 3d8:	22 30       	cpi	r18, 0x02	; 2
 3da:	31 05       	cpc	r19, r1
 3dc:	2c f4       	brge	.+10     	; 0x3e8 <DIO_SetPinValue_u8+0x14a>
 3de:	8c 81       	ldd	r24, Y+4	; 0x04
 3e0:	9d 81       	ldd	r25, Y+5	; 0x05
 3e2:	00 97       	sbiw	r24, 0x00	; 0
 3e4:	61 f0       	breq	.+24     	; 0x3fe <DIO_SetPinValue_u8+0x160>
 3e6:	5a c0       	rjmp	.+180    	; 0x49c <DIO_SetPinValue_u8+0x1fe>
 3e8:	2c 81       	ldd	r18, Y+4	; 0x04
 3ea:	3d 81       	ldd	r19, Y+5	; 0x05
 3ec:	22 30       	cpi	r18, 0x02	; 2
 3ee:	31 05       	cpc	r19, r1
 3f0:	71 f1       	breq	.+92     	; 0x44e <DIO_SetPinValue_u8+0x1b0>
 3f2:	8c 81       	ldd	r24, Y+4	; 0x04
 3f4:	9d 81       	ldd	r25, Y+5	; 0x05
 3f6:	83 30       	cpi	r24, 0x03	; 3
 3f8:	91 05       	cpc	r25, r1
 3fa:	e9 f1       	breq	.+122    	; 0x476 <DIO_SetPinValue_u8+0x1d8>
 3fc:	4f c0       	rjmp	.+158    	; 0x49c <DIO_SetPinValue_u8+0x1fe>
		{
		case PORT0 :SET_BIT( PORTA_REG,u8PinId_copy); break;
 3fe:	ab e3       	ldi	r26, 0x3B	; 59
 400:	b0 e0       	ldi	r27, 0x00	; 0
 402:	eb e3       	ldi	r30, 0x3B	; 59
 404:	f0 e0       	ldi	r31, 0x00	; 0
 406:	80 81       	ld	r24, Z
 408:	48 2f       	mov	r20, r24
 40a:	8a 81       	ldd	r24, Y+2	; 0x02
 40c:	28 2f       	mov	r18, r24
 40e:	30 e0       	ldi	r19, 0x00	; 0
 410:	81 e0       	ldi	r24, 0x01	; 1
 412:	90 e0       	ldi	r25, 0x00	; 0
 414:	02 2e       	mov	r0, r18
 416:	02 c0       	rjmp	.+4      	; 0x41c <DIO_SetPinValue_u8+0x17e>
 418:	88 0f       	add	r24, r24
 41a:	99 1f       	adc	r25, r25
 41c:	0a 94       	dec	r0
 41e:	e2 f7       	brpl	.-8      	; 0x418 <DIO_SetPinValue_u8+0x17a>
 420:	84 2b       	or	r24, r20
 422:	8c 93       	st	X, r24
 424:	3b c0       	rjmp	.+118    	; 0x49c <DIO_SetPinValue_u8+0x1fe>
		case PORT1 :SET_BIT( PORTB_REG,u8PinId_copy); break;
 426:	a8 e3       	ldi	r26, 0x38	; 56
 428:	b0 e0       	ldi	r27, 0x00	; 0
 42a:	e8 e3       	ldi	r30, 0x38	; 56
 42c:	f0 e0       	ldi	r31, 0x00	; 0
 42e:	80 81       	ld	r24, Z
 430:	48 2f       	mov	r20, r24
 432:	8a 81       	ldd	r24, Y+2	; 0x02
 434:	28 2f       	mov	r18, r24
 436:	30 e0       	ldi	r19, 0x00	; 0
 438:	81 e0       	ldi	r24, 0x01	; 1
 43a:	90 e0       	ldi	r25, 0x00	; 0
 43c:	02 2e       	mov	r0, r18
 43e:	02 c0       	rjmp	.+4      	; 0x444 <DIO_SetPinValue_u8+0x1a6>
 440:	88 0f       	add	r24, r24
 442:	99 1f       	adc	r25, r25
 444:	0a 94       	dec	r0
 446:	e2 f7       	brpl	.-8      	; 0x440 <DIO_SetPinValue_u8+0x1a2>
 448:	84 2b       	or	r24, r20
 44a:	8c 93       	st	X, r24
 44c:	27 c0       	rjmp	.+78     	; 0x49c <DIO_SetPinValue_u8+0x1fe>
		case PORT2 :SET_BIT( PORTC_REG,u8PinId_copy); break;
 44e:	a5 e3       	ldi	r26, 0x35	; 53
 450:	b0 e0       	ldi	r27, 0x00	; 0
 452:	e5 e3       	ldi	r30, 0x35	; 53
 454:	f0 e0       	ldi	r31, 0x00	; 0
 456:	80 81       	ld	r24, Z
 458:	48 2f       	mov	r20, r24
 45a:	8a 81       	ldd	r24, Y+2	; 0x02
 45c:	28 2f       	mov	r18, r24
 45e:	30 e0       	ldi	r19, 0x00	; 0
 460:	81 e0       	ldi	r24, 0x01	; 1
 462:	90 e0       	ldi	r25, 0x00	; 0
 464:	02 2e       	mov	r0, r18
 466:	02 c0       	rjmp	.+4      	; 0x46c <DIO_SetPinValue_u8+0x1ce>
 468:	88 0f       	add	r24, r24
 46a:	99 1f       	adc	r25, r25
 46c:	0a 94       	dec	r0
 46e:	e2 f7       	brpl	.-8      	; 0x468 <DIO_SetPinValue_u8+0x1ca>
 470:	84 2b       	or	r24, r20
 472:	8c 93       	st	X, r24
 474:	13 c0       	rjmp	.+38     	; 0x49c <DIO_SetPinValue_u8+0x1fe>
		case PORT3 :SET_BIT( PORTD_REG,u8PinId_copy); break;
 476:	a2 e3       	ldi	r26, 0x32	; 50
 478:	b0 e0       	ldi	r27, 0x00	; 0
 47a:	e2 e3       	ldi	r30, 0x32	; 50
 47c:	f0 e0       	ldi	r31, 0x00	; 0
 47e:	80 81       	ld	r24, Z
 480:	48 2f       	mov	r20, r24
 482:	8a 81       	ldd	r24, Y+2	; 0x02
 484:	28 2f       	mov	r18, r24
 486:	30 e0       	ldi	r19, 0x00	; 0
 488:	81 e0       	ldi	r24, 0x01	; 1
 48a:	90 e0       	ldi	r25, 0x00	; 0
 48c:	02 2e       	mov	r0, r18
 48e:	02 c0       	rjmp	.+4      	; 0x494 <DIO_SetPinValue_u8+0x1f6>
 490:	88 0f       	add	r24, r24
 492:	99 1f       	adc	r25, r25
 494:	0a 94       	dec	r0
 496:	e2 f7       	brpl	.-8      	; 0x490 <DIO_SetPinValue_u8+0x1f2>
 498:	84 2b       	or	r24, r20
 49a:	8c 93       	st	X, r24

}
else
{/*DO NOTHING*/}

}
 49c:	27 96       	adiw	r28, 0x07	; 7
 49e:	0f b6       	in	r0, 0x3f	; 63
 4a0:	f8 94       	cli
 4a2:	de bf       	out	0x3e, r29	; 62
 4a4:	0f be       	out	0x3f, r0	; 63
 4a6:	cd bf       	out	0x3d, r28	; 61
 4a8:	cf 91       	pop	r28
 4aa:	df 91       	pop	r29
 4ac:	08 95       	ret

000004ae <DIO_GetPinValue>:



u8 DIO_GetPinValue(u8 u8PortIdCopy, u8 u8PinIdCopy)
{
 4ae:	df 93       	push	r29
 4b0:	cf 93       	push	r28
 4b2:	00 d0       	rcall	.+0      	; 0x4b4 <DIO_GetPinValue+0x6>
 4b4:	00 d0       	rcall	.+0      	; 0x4b6 <DIO_GetPinValue+0x8>
 4b6:	0f 92       	push	r0
 4b8:	cd b7       	in	r28, 0x3d	; 61
 4ba:	de b7       	in	r29, 0x3e	; 62
 4bc:	8a 83       	std	Y+2, r24	; 0x02
 4be:	6b 83       	std	Y+3, r22	; 0x03

	u8 u8ResultLocal;
	/* Make sure that the Port ID and Pin ID are in the valid range */
	if ((u8PortIdCopy <= 4) && (u8PinIdCopy <= 7))
 4c0:	8a 81       	ldd	r24, Y+2	; 0x02
 4c2:	85 30       	cpi	r24, 0x05	; 5
 4c4:	08 f0       	brcs	.+2      	; 0x4c8 <DIO_GetPinValue+0x1a>
 4c6:	6c c0       	rjmp	.+216    	; 0x5a0 <DIO_GetPinValue+0xf2>
 4c8:	8b 81       	ldd	r24, Y+3	; 0x03
 4ca:	88 30       	cpi	r24, 0x08	; 8
 4cc:	08 f0       	brcs	.+2      	; 0x4d0 <DIO_GetPinValue+0x22>
 4ce:	68 c0       	rjmp	.+208    	; 0x5a0 <DIO_GetPinValue+0xf2>
	{

		switch (u8PortIdCopy)
 4d0:	8a 81       	ldd	r24, Y+2	; 0x02
 4d2:	28 2f       	mov	r18, r24
 4d4:	30 e0       	ldi	r19, 0x00	; 0
 4d6:	3d 83       	std	Y+5, r19	; 0x05
 4d8:	2c 83       	std	Y+4, r18	; 0x04
 4da:	4c 81       	ldd	r20, Y+4	; 0x04
 4dc:	5d 81       	ldd	r21, Y+5	; 0x05
 4de:	41 30       	cpi	r20, 0x01	; 1
 4e0:	51 05       	cpc	r21, r1
 4e2:	41 f1       	breq	.+80     	; 0x534 <DIO_GetPinValue+0x86>
 4e4:	8c 81       	ldd	r24, Y+4	; 0x04
 4e6:	9d 81       	ldd	r25, Y+5	; 0x05
 4e8:	82 30       	cpi	r24, 0x02	; 2
 4ea:	91 05       	cpc	r25, r1
 4ec:	34 f4       	brge	.+12     	; 0x4fa <DIO_GetPinValue+0x4c>
 4ee:	2c 81       	ldd	r18, Y+4	; 0x04
 4f0:	3d 81       	ldd	r19, Y+5	; 0x05
 4f2:	21 15       	cp	r18, r1
 4f4:	31 05       	cpc	r19, r1
 4f6:	61 f0       	breq	.+24     	; 0x510 <DIO_GetPinValue+0x62>
 4f8:	55 c0       	rjmp	.+170    	; 0x5a4 <DIO_GetPinValue+0xf6>
 4fa:	4c 81       	ldd	r20, Y+4	; 0x04
 4fc:	5d 81       	ldd	r21, Y+5	; 0x05
 4fe:	42 30       	cpi	r20, 0x02	; 2
 500:	51 05       	cpc	r21, r1
 502:	51 f1       	breq	.+84     	; 0x558 <DIO_GetPinValue+0xaa>
 504:	8c 81       	ldd	r24, Y+4	; 0x04
 506:	9d 81       	ldd	r25, Y+5	; 0x05
 508:	83 30       	cpi	r24, 0x03	; 3
 50a:	91 05       	cpc	r25, r1
 50c:	b9 f1       	breq	.+110    	; 0x57c <DIO_GetPinValue+0xce>
 50e:	4a c0       	rjmp	.+148    	; 0x5a4 <DIO_GetPinValue+0xf6>
		{
			case PORT0: u8ResultLocal= GET_BIT(PINA_REG,u8PinIdCopy); break;
 510:	e9 e3       	ldi	r30, 0x39	; 57
 512:	f0 e0       	ldi	r31, 0x00	; 0
 514:	80 81       	ld	r24, Z
 516:	28 2f       	mov	r18, r24
 518:	30 e0       	ldi	r19, 0x00	; 0
 51a:	8b 81       	ldd	r24, Y+3	; 0x03
 51c:	88 2f       	mov	r24, r24
 51e:	90 e0       	ldi	r25, 0x00	; 0
 520:	a9 01       	movw	r20, r18
 522:	02 c0       	rjmp	.+4      	; 0x528 <DIO_GetPinValue+0x7a>
 524:	55 95       	asr	r21
 526:	47 95       	ror	r20
 528:	8a 95       	dec	r24
 52a:	e2 f7       	brpl	.-8      	; 0x524 <DIO_GetPinValue+0x76>
 52c:	ca 01       	movw	r24, r20
 52e:	81 70       	andi	r24, 0x01	; 1
 530:	89 83       	std	Y+1, r24	; 0x01
 532:	38 c0       	rjmp	.+112    	; 0x5a4 <DIO_GetPinValue+0xf6>
			case PORT1: u8ResultLocal= GET_BIT(PINB_REG,u8PinIdCopy); break;
 534:	e6 e3       	ldi	r30, 0x36	; 54
 536:	f0 e0       	ldi	r31, 0x00	; 0
 538:	80 81       	ld	r24, Z
 53a:	28 2f       	mov	r18, r24
 53c:	30 e0       	ldi	r19, 0x00	; 0
 53e:	8b 81       	ldd	r24, Y+3	; 0x03
 540:	88 2f       	mov	r24, r24
 542:	90 e0       	ldi	r25, 0x00	; 0
 544:	a9 01       	movw	r20, r18
 546:	02 c0       	rjmp	.+4      	; 0x54c <DIO_GetPinValue+0x9e>
 548:	55 95       	asr	r21
 54a:	47 95       	ror	r20
 54c:	8a 95       	dec	r24
 54e:	e2 f7       	brpl	.-8      	; 0x548 <DIO_GetPinValue+0x9a>
 550:	ca 01       	movw	r24, r20
 552:	81 70       	andi	r24, 0x01	; 1
 554:	89 83       	std	Y+1, r24	; 0x01
 556:	26 c0       	rjmp	.+76     	; 0x5a4 <DIO_GetPinValue+0xf6>
			case PORT2: u8ResultLocal= GET_BIT(PINC_REG,u8PinIdCopy); break;
 558:	e3 e3       	ldi	r30, 0x33	; 51
 55a:	f0 e0       	ldi	r31, 0x00	; 0
 55c:	80 81       	ld	r24, Z
 55e:	28 2f       	mov	r18, r24
 560:	30 e0       	ldi	r19, 0x00	; 0
 562:	8b 81       	ldd	r24, Y+3	; 0x03
 564:	88 2f       	mov	r24, r24
 566:	90 e0       	ldi	r25, 0x00	; 0
 568:	a9 01       	movw	r20, r18
 56a:	02 c0       	rjmp	.+4      	; 0x570 <DIO_GetPinValue+0xc2>
 56c:	55 95       	asr	r21
 56e:	47 95       	ror	r20
 570:	8a 95       	dec	r24
 572:	e2 f7       	brpl	.-8      	; 0x56c <DIO_GetPinValue+0xbe>
 574:	ca 01       	movw	r24, r20
 576:	81 70       	andi	r24, 0x01	; 1
 578:	89 83       	std	Y+1, r24	; 0x01
 57a:	14 c0       	rjmp	.+40     	; 0x5a4 <DIO_GetPinValue+0xf6>
			case PORT3: u8ResultLocal= GET_BIT(PIND_REG,u8PinIdCopy); break;
 57c:	e0 e3       	ldi	r30, 0x30	; 48
 57e:	f0 e0       	ldi	r31, 0x00	; 0
 580:	80 81       	ld	r24, Z
 582:	28 2f       	mov	r18, r24
 584:	30 e0       	ldi	r19, 0x00	; 0
 586:	8b 81       	ldd	r24, Y+3	; 0x03
 588:	88 2f       	mov	r24, r24
 58a:	90 e0       	ldi	r25, 0x00	; 0
 58c:	a9 01       	movw	r20, r18
 58e:	02 c0       	rjmp	.+4      	; 0x594 <DIO_GetPinValue+0xe6>
 590:	55 95       	asr	r21
 592:	47 95       	ror	r20
 594:	8a 95       	dec	r24
 596:	e2 f7       	brpl	.-8      	; 0x590 <DIO_GetPinValue+0xe2>
 598:	ca 01       	movw	r24, r20
 59a:	81 70       	andi	r24, 0x01	; 1
 59c:	89 83       	std	Y+1, r24	; 0x01
 59e:	02 c0       	rjmp	.+4      	; 0x5a4 <DIO_GetPinValue+0xf6>
	}

	else
	{
		/* return 0xff in case of error in the Pin ID or PORT ID */
		u8ResultLocal = 0xFF;
 5a0:	8f ef       	ldi	r24, 0xFF	; 255
 5a2:	89 83       	std	Y+1, r24	; 0x01
	}

	return u8ResultLocal;
 5a4:	89 81       	ldd	r24, Y+1	; 0x01
}
 5a6:	0f 90       	pop	r0
 5a8:	0f 90       	pop	r0
 5aa:	0f 90       	pop	r0
 5ac:	0f 90       	pop	r0
 5ae:	0f 90       	pop	r0
 5b0:	cf 91       	pop	r28
 5b2:	df 91       	pop	r29
 5b4:	08 95       	ret

000005b6 <DIO_SetPortDirection>:



void DIO_SetPortDirection (u8 u8PortId, u8 u8PortDir)
{
 5b6:	df 93       	push	r29
 5b8:	cf 93       	push	r28
 5ba:	00 d0       	rcall	.+0      	; 0x5bc <DIO_SetPortDirection+0x6>
 5bc:	00 d0       	rcall	.+0      	; 0x5be <DIO_SetPortDirection+0x8>
 5be:	cd b7       	in	r28, 0x3d	; 61
 5c0:	de b7       	in	r29, 0x3e	; 62
 5c2:	89 83       	std	Y+1, r24	; 0x01
 5c4:	6a 83       	std	Y+2, r22	; 0x02

	switch (u8PortId)
 5c6:	89 81       	ldd	r24, Y+1	; 0x01
 5c8:	28 2f       	mov	r18, r24
 5ca:	30 e0       	ldi	r19, 0x00	; 0
 5cc:	3c 83       	std	Y+4, r19	; 0x04
 5ce:	2b 83       	std	Y+3, r18	; 0x03
 5d0:	8b 81       	ldd	r24, Y+3	; 0x03
 5d2:	9c 81       	ldd	r25, Y+4	; 0x04
 5d4:	81 30       	cpi	r24, 0x01	; 1
 5d6:	91 05       	cpc	r25, r1
 5d8:	d1 f0       	breq	.+52     	; 0x60e <DIO_SetPortDirection+0x58>
 5da:	2b 81       	ldd	r18, Y+3	; 0x03
 5dc:	3c 81       	ldd	r19, Y+4	; 0x04
 5de:	22 30       	cpi	r18, 0x02	; 2
 5e0:	31 05       	cpc	r19, r1
 5e2:	2c f4       	brge	.+10     	; 0x5ee <DIO_SetPortDirection+0x38>
 5e4:	8b 81       	ldd	r24, Y+3	; 0x03
 5e6:	9c 81       	ldd	r25, Y+4	; 0x04
 5e8:	00 97       	sbiw	r24, 0x00	; 0
 5ea:	61 f0       	breq	.+24     	; 0x604 <DIO_SetPortDirection+0x4e>
 5ec:	1e c0       	rjmp	.+60     	; 0x62a <DIO_SetPortDirection+0x74>
 5ee:	2b 81       	ldd	r18, Y+3	; 0x03
 5f0:	3c 81       	ldd	r19, Y+4	; 0x04
 5f2:	22 30       	cpi	r18, 0x02	; 2
 5f4:	31 05       	cpc	r19, r1
 5f6:	81 f0       	breq	.+32     	; 0x618 <DIO_SetPortDirection+0x62>
 5f8:	8b 81       	ldd	r24, Y+3	; 0x03
 5fa:	9c 81       	ldd	r25, Y+4	; 0x04
 5fc:	83 30       	cpi	r24, 0x03	; 3
 5fe:	91 05       	cpc	r25, r1
 600:	81 f0       	breq	.+32     	; 0x622 <DIO_SetPortDirection+0x6c>
 602:	13 c0       	rjmp	.+38     	; 0x62a <DIO_SetPortDirection+0x74>
	{
		case     PORT0: DDRA_REG = u8PortDir; break;
 604:	ea e3       	ldi	r30, 0x3A	; 58
 606:	f0 e0       	ldi	r31, 0x00	; 0
 608:	8a 81       	ldd	r24, Y+2	; 0x02
 60a:	80 83       	st	Z, r24
 60c:	0e c0       	rjmp	.+28     	; 0x62a <DIO_SetPortDirection+0x74>
		case     PORT1: DDRB_REG = u8PortDir; break;
 60e:	e7 e3       	ldi	r30, 0x37	; 55
 610:	f0 e0       	ldi	r31, 0x00	; 0
 612:	8a 81       	ldd	r24, Y+2	; 0x02
 614:	80 83       	st	Z, r24
 616:	09 c0       	rjmp	.+18     	; 0x62a <DIO_SetPortDirection+0x74>
		case     PORT2: DDRC_REG = u8PortDir; break;
 618:	e4 e3       	ldi	r30, 0x34	; 52
 61a:	f0 e0       	ldi	r31, 0x00	; 0
 61c:	8a 81       	ldd	r24, Y+2	; 0x02
 61e:	80 83       	st	Z, r24
 620:	04 c0       	rjmp	.+8      	; 0x62a <DIO_SetPortDirection+0x74>
		case     PORT3: DDRD_REG = u8PortDir; break;
 622:	e1 e3       	ldi	r30, 0x31	; 49
 624:	f0 e0       	ldi	r31, 0x00	; 0
 626:	8a 81       	ldd	r24, Y+2	; 0x02
 628:	80 83       	st	Z, r24
		default:        break;
	}
}
 62a:	0f 90       	pop	r0
 62c:	0f 90       	pop	r0
 62e:	0f 90       	pop	r0
 630:	0f 90       	pop	r0
 632:	cf 91       	pop	r28
 634:	df 91       	pop	r29
 636:	08 95       	ret

00000638 <DIO_SetPortValue>:

void DIO_SetPortValue (u8 u8PortId, u8 u8PortVal)
{
 638:	df 93       	push	r29
 63a:	cf 93       	push	r28
 63c:	00 d0       	rcall	.+0      	; 0x63e <DIO_SetPortValue+0x6>
 63e:	00 d0       	rcall	.+0      	; 0x640 <DIO_SetPortValue+0x8>
 640:	cd b7       	in	r28, 0x3d	; 61
 642:	de b7       	in	r29, 0x3e	; 62
 644:	89 83       	std	Y+1, r24	; 0x01
 646:	6a 83       	std	Y+2, r22	; 0x02
	/* Check on the Required PORT Number */
	switch (u8PortId)
 648:	89 81       	ldd	r24, Y+1	; 0x01
 64a:	28 2f       	mov	r18, r24
 64c:	30 e0       	ldi	r19, 0x00	; 0
 64e:	3c 83       	std	Y+4, r19	; 0x04
 650:	2b 83       	std	Y+3, r18	; 0x03
 652:	8b 81       	ldd	r24, Y+3	; 0x03
 654:	9c 81       	ldd	r25, Y+4	; 0x04
 656:	81 30       	cpi	r24, 0x01	; 1
 658:	91 05       	cpc	r25, r1
 65a:	d1 f0       	breq	.+52     	; 0x690 <DIO_SetPortValue+0x58>
 65c:	2b 81       	ldd	r18, Y+3	; 0x03
 65e:	3c 81       	ldd	r19, Y+4	; 0x04
 660:	22 30       	cpi	r18, 0x02	; 2
 662:	31 05       	cpc	r19, r1
 664:	2c f4       	brge	.+10     	; 0x670 <DIO_SetPortValue+0x38>
 666:	8b 81       	ldd	r24, Y+3	; 0x03
 668:	9c 81       	ldd	r25, Y+4	; 0x04
 66a:	00 97       	sbiw	r24, 0x00	; 0
 66c:	61 f0       	breq	.+24     	; 0x686 <DIO_SetPortValue+0x4e>
 66e:	1e c0       	rjmp	.+60     	; 0x6ac <DIO_SetPortValue+0x74>
 670:	2b 81       	ldd	r18, Y+3	; 0x03
 672:	3c 81       	ldd	r19, Y+4	; 0x04
 674:	22 30       	cpi	r18, 0x02	; 2
 676:	31 05       	cpc	r19, r1
 678:	81 f0       	breq	.+32     	; 0x69a <DIO_SetPortValue+0x62>
 67a:	8b 81       	ldd	r24, Y+3	; 0x03
 67c:	9c 81       	ldd	r25, Y+4	; 0x04
 67e:	83 30       	cpi	r24, 0x03	; 3
 680:	91 05       	cpc	r25, r1
 682:	81 f0       	breq	.+32     	; 0x6a4 <DIO_SetPortValue+0x6c>
 684:	13 c0       	rjmp	.+38     	; 0x6ac <DIO_SetPortValue+0x74>
	{
		case     PORT0: PORTA_REG = u8PortVal; break;
 686:	eb e3       	ldi	r30, 0x3B	; 59
 688:	f0 e0       	ldi	r31, 0x00	; 0
 68a:	8a 81       	ldd	r24, Y+2	; 0x02
 68c:	80 83       	st	Z, r24
 68e:	0e c0       	rjmp	.+28     	; 0x6ac <DIO_SetPortValue+0x74>
		case     PORT1: PORTB_REG = u8PortVal; break;
 690:	e8 e3       	ldi	r30, 0x38	; 56
 692:	f0 e0       	ldi	r31, 0x00	; 0
 694:	8a 81       	ldd	r24, Y+2	; 0x02
 696:	80 83       	st	Z, r24
 698:	09 c0       	rjmp	.+18     	; 0x6ac <DIO_SetPortValue+0x74>
		case     PORT2: PORTC_REG = u8PortVal; break;
 69a:	e5 e3       	ldi	r30, 0x35	; 53
 69c:	f0 e0       	ldi	r31, 0x00	; 0
 69e:	8a 81       	ldd	r24, Y+2	; 0x02
 6a0:	80 83       	st	Z, r24
 6a2:	04 c0       	rjmp	.+8      	; 0x6ac <DIO_SetPortValue+0x74>
		case     PORT3: PORTD_REG = u8PortVal; break;
 6a4:	e2 e3       	ldi	r30, 0x32	; 50
 6a6:	f0 e0       	ldi	r31, 0x00	; 0
 6a8:	8a 81       	ldd	r24, Y+2	; 0x02
 6aa:	80 83       	st	Z, r24
		default: /* Wrong Port ID */        break;
	}
}
 6ac:	0f 90       	pop	r0
 6ae:	0f 90       	pop	r0
 6b0:	0f 90       	pop	r0
 6b2:	0f 90       	pop	r0
 6b4:	cf 91       	pop	r28
 6b6:	df 91       	pop	r29
 6b8:	08 95       	ret

000006ba <_exit>:
 6ba:	f8 94       	cli

000006bc <__stop_program>:
 6bc:	ff cf       	rjmp	.-2      	; 0x6bc <__stop_program>
